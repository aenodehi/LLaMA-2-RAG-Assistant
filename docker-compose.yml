services:
  zenml:
    image: zenmldocker/zenml:0.53.0
    container_name: "llm_engineering_zenml"
    #entrypoint: ["zenml", "server", "start"]
    #command: ["zenml", "up"]
    command: ["sh", "-c", "pip install 'zenml[server]==0.53.0' && zenml up"]
    ports:
      - "8237:8000"
    volumes:
      - zenml_store:/zenml
    environment:
      - ZENML_STORE_URL=sqlite:////zenml/zenml.db
      - ZENML_SERVER_DEPLOYMENT_TYPE=local
      - ZENML_SERVER_PORT=8000
      - ZENML_SERVER_HOST=0.0.0.0
    networks:
      - local
    depends_on:
      - mongo
      - qdrant
    restart: unless-stopped
    #healthcheck:
      #test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      #test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      #interval: 30s
      #timeout: 30s 
      #retries: 10  
      #start_period: 2m 

  mongo:
    image: mongo:latest
    container_name: "llm_engineering_mongo"
    logging:
      options:
        max-size: 1g
    environment:
      MONGO_INITDB_ROOT_USERNAME: "llm_engineering"
      MONGO_INITDB_ROOT_PASSWORD: "llm_engineering"
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - local
    restart: always

  qdrant:
    image: qdrant/qdrant:latest
    container_name: "llm_engineering_qdrant"
    ports:
      - 6333:6333
      - 6334:6334
    expose:
      - 6333
      - 6334
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - local
    restart: always

volumes:
  zenml_store:
  mongo_data:
  qdrant_data:

networks:
  local:
    driver: bridge
